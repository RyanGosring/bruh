let exception AbnormalExit of string * int in
let run_and_get_lines cmd tmp_filename =
  let err_code = Sys.command (cmd ^ " > " ^ tmp_filename) in
  if err_code != 0 then
    raise (AbnormalExit (cmd, err_code));
  let inp = open_in tmp_filename in
  let res = ref [] in
  let () = try
    while true do
      let line = input_line inp in
      res := List.cons line !res
    done
  with End_of_file ->
    close_in inp
  in
  List.rev(!res)
in
let exec s =
  let l = Lexing.from_string s in
  let ph = !Toploop.parse_toplevel_phrase l in
  let fmt = Format.make_formatter (fun _ _ _ -> ()) (fun _ -> ()) in
  let _ = Toploop.execute_phrase false fmt ph in ()
in
let tmp_filename = Filename.temp_file "libraries" "top" in
let lines = run_and_get_lines "dune toplevel-init-file" tmp_filename in
List.iter (fun l -> exec l) lines