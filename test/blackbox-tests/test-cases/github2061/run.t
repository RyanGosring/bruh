Reproduction case for #2061. Exhibit a problem when a rule in default
mode produces multiple files and only a strict subset of them is in
the source tree.

  $ dune build a
  File "dune", line 1, characters 0-95:
  1 | (rule
  2 |  (progn
  3 |   (with-stdout-to a (echo "GENERATED"))
  4 |   (with-stdout-to b (echo "GENERATED"))))
  Warning: File a is both generated by a rule and present in the source tree.
  As a result, the rule is currently ignored, however this will become an error in the future.
  To keep the current behavior and get rid of this warning, add a field (fallback) to the rule.
  $ cat _build/default/a
  SOURCE

Building b shouldn't erase a:

  $ dune build b
  File "dune", line 1, characters 0-95:
  1 | (rule
  2 |  (progn
  3 |   (with-stdout-to a (echo "GENERATED"))
  4 |   (with-stdout-to b (echo "GENERATED"))))
  Warning: File a is both generated by a rule and present in the source tree.
  As a result, the rule is currently ignored, however this will become an error in the future.
  To keep the current behavior and get rid of this warning, add a field (fallback) to the rule.
  $ cat _build/default/a
  GENERATED
